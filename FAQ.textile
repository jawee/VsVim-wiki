[[Default Settings Change Announcement|Defaults-for-Settings]]

* <a href="#oss">Does this project accept contributions?</a>
* <a href="#nosupport">How can I get feature X implemented / supported?</a>
* <a href="#advanced">Why don't Ctrl-V, Ctrl-A and Ctrl-X work in Visual Studio?</a>
* <a href="#disablekey">When I uninstall VsVim why do keys like Delete no longer work?</a>
* <a href="#vimrc">How can I verify my .vimrc is loading?</a>
* <a href="#thirdPartyTools">Integration with ReSharper, DevExpress, Visual Assist, etc ...</a>
* <a href="#disable">Temporarily disabling VsVim</a>
* <a href="#language">Why is so much of this written in F#?</a>
* <a href="#drops">Where can i get older drops?</a>
* <a href="#vax">Visual Assist Compatibility</a>
* <a href="#porting">Porting VsVim to other applications</a>
* <a href="#ptvs2013">Python Tools 2013 Preview</a>
* <a href="#blinking">The cursor blinks now</a>

<a name="oss"></a>
*Does this project accept contributions?*

Yes. VsVim is released under the Apache 2.0 license and accepts outside contributions. 

<a name="nosupport"></a>
*How can I get feature X implemented / supported?*

Please file an issue on GitHub requesting this feature.  Issues are the primary way I track both bugs and feature requests.  

<a name="advanced"></a>
*Why don't Ctrl-V, Ctrl-A and Ctrl-X work in Visual Studio?*

All of these commands are implemented but are not enabled by default.  These are command keys which have very specific meaning in Windows and their usage is classified as advanced so VsVim won't unbind them by default.  To enable these commands manually switch them to VsVim in the conflicting key bindings dialog. 

If you'd like to have the VsVim handle Ctrl-V, Ctrl-C, etc and still get the typical Windows behavior, see <a href="https://github.com/jaredpar/VsVim/wiki/VsVim-Nonstandard-Behavior#wiki-clipboard">these instructions</a> on the <a href="https://github.com/jaredpar/VsVim/wiki/VsVim-Nonstandard-Behavior">VsVim Nonstandard Behavior</a> page.

Note: Ctrl-A and Ctrl-X aren't available until 1.1


<a name="disablekey"></a>
*When I uninstall VsVim why do keys like Delete no longer work?*

Visual Studio by default contains a lot of key bindings which interfere with VsVim's ability to be a proper emulation of Vim.  As such on start up it will detect any key bindings which conflict and prompt the user to remove them.  These are not reset when VsVim is uninstalled.

There are two options for restoring the settings.  The first is to use the Vim Options page (accessible via the Options button on the margin).  From here you can reset the key bindings back to their original state.  

The other method is to reset your current profile.  This is much more impactful though and will have the effect of resetting other settings.  

bq. Tools -> Options -> Import / Export Settings


<a name="vimrc"></a>
*How can I verify my .vimrc is loading?*

There are 2 non-standard vim settings that can be used to diagnose potential .vimrc load issues

* vimrc - This setting will display the full path of the file which was loaded for the .vimrc
* vimrcpaths - This setting will display the files and paths searched for .vimrc 

By default VsVim will look for a file named .vsvimrc, _vsvimrc, .vimrc or _vimrc file in the paths %HOME%, %VIM% and %USERPROFILE%

As of now the commands supported in the .vimrc file are limited to those supported in command mode.  

<a name="thirdPartyTools"></a>
*Integration with ReSharper, DevExpress, Visual Assist, etc ...*

Beta support for integration with ReSharper, CodeRush, etc ... is available now 

[[Beta Support Wiki Page|https://github.com/jaredpar/VsVim/wiki/3rd-party-plugin-support-(R%23,-Code-Rush,-etc-...)]]

Right now there is no explicit support for interaction with 3rd party editor extensions like ReSharper, DevExpressio, Visual Assist, etc ...  This support is coming and is the primary focus of the next version VsVim (0.9.4).  A beta is expected around 12/9

In the mean time if you reach a scenario where VsVim is interfering with actions like in place refactoring, you can <a href="#disable">temporarily disable it</a>, do the 3rd party action and then re-enable VsVim afterwards.  

<a name="disable"></a>
*Temporarily disabling VsVim*

VsVim can be temporairly disabled by the key sequence Ctrl+Shift+F12 and re-enabled later by the same key sequence.  While disabled VsVim will not interfere with any keyboard or selection allowing you to use Visual Studio as if VsVim wasn't installed.

<a name="language"></a>
*Why is so much of this written in F#?*

VsVim originally started as an internal hobby project of mine.  I wanted vim key bindings on a newer version of Visual Studio and at the same time I was learning F#.  Combining the two projects seemed like a perfect idea.  

If I had known that I'd stick with the project this long and release it to the world I may have chosen C# instead.  Not because I dislike F# in any way (I absolutely love it in fact).  But because I realize it's a barrier to many people contributing to the project.  

<a name="drops"></a>
*Where can I get older drops*

Older versions of VsVim are available in the following Dropbox folder

<a href="https://www.dropbox.com/sh/pqxkvemji983alf/kZ3a2dUplB">VsVim Drops</a>

<a name="vax"></a>
*Visual Assist Compatibility*

Recent versions of Visual Assist are compatible with VsVim.  If you are seeing any issues then make sure that the following registry value has a value of 1.  This is the default so not seeing the setting means that it's OK.

* VS2010: HKCU\Software\Whole Tomato\Visual Assist X\VANet10\TrackCaretVisibility
* VS2012: HKCU\Software\Whole Tomato\Visual Assist X\VANet11\TrackCaretVisibility

<a name="porting"></a>
*Porting VsVim to other applications*

[[Porting-VsVim-to-other-applications]]

<a name="ptvs2013"></a>
*Failure of VsVim to load in Python Tools for Visual Studio 2013 Preview Edition*

[[PTVS-2013-Preview-and-VsVim]]

<a name="blinking"></a>
*The cursor blinks now*

VsVim obeys your operating system cursor blink rate preferences.  If you don't like it, set it to none in:

bq. Control Panel -> Keyboard -> Cursor blink rate
